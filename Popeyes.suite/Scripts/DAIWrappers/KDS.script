(** 
ScriptName: KDS
Version 1.0
Author: Sajeendra Das
CreatedOn: 4/22/25
PeerReviewedBy:
PeerReviewedOn:
EditedBy: 
EditedOn: 
Description:  Handlers specific to the KDS Operations on the POS platform.
**)

(**
"This software is copyright Keysight Technologies, Inc. and licensed under the terms of Keysight’s End User License Agreement. Terms of Keysight’s EULA may be found here: www.keysight.com/find/sweula By using this Software, you agree to the terms of the Keysight EULA."
**) 


(**  
connectToKDS - Handler to login to the NCR KDS SUT
@Version 1.0 4/22/2025
@ChangeReason Creation
**)
to connectToKDS
	// Code for NCR KDS
	if (global posPlatformName) is "NCR" or (global posPlatformName) is "NCRKiosk"
		Common.connectToLocalSingleSystem
		
		// If Command Center window is already opened from previous session, close it
		if ImageFound(text:"Command Center", waitFor:2, searchRectangle: Config().SearchRectangles.(TopHalf))
			//Click Command Center window.
			click FoundImageLocation()
			wait 1
		end if
		
		wait 1
		
		// Use Handler to open VNC connection for  FC EXPO
		Common.launchNCRVNC "FCExpo"
		
		// Bring SUT into focus
		Connect {serverID: "127.0.0.1", portNum:5500, Visible: "Yes"} 
	end if
	
	// Code for Oracle KDS
	if (global posPlatformName) is "Oracle" or (global posPlatformName) is "OracleKiosk" or (global posPlatformName) is "OracleAppDelivery"  or (global posPlatformName) is "OracleAppPickup"
		Connect DataFile().SUTNames.OracleKDS, visible: Yes
		
		// Wait for SUT To be connected
		repeat 2 minutes
			if not connected of ConnectionInfo() then
				Log "SUT is not connected yet. Trying again in 10 seconds"
				wait 10
			else
				log "SUT Connected!"
				exit repeat
			end if
		end repeat
		
		// Click to wake up the system, incase it is showing the screen saver
		click Config().TextOffsets.(ClickScreenOffset)
	end if
	
	// Code for Sicom KDS
	if (global posPlatformName) is "Sicom"
		Common.switchSicomWindowTo "KDS"
	end if
	
end connectToKDS

(**  
bumpOrderIDOnKDS - Handler to Bump the order ID on the KDS SUT
@Version 1.0 4/22/2025
@ChangeReason Creation
**)
to bumpOrderIDOnKDS
	// Code for NCR KDS
	if (global posPlatformName) is "NCR" or (global posPlatformName) is "NCRKiosk"
		// Look for the Order ID on the KDS screen
		repeat until ImageFound(text: global orderID, waitFor:Config().Waits.(midWait), contrast: on, DPI: 144)
			click image: "Icons/KDSNext",  SearchRectangle: Config().SearchRectangles.(BottomHalf)
		end repeat
		
		// Pick the first instance of order ID on screen and create a search rectangle
		put EveryImageRectangle(text:global orderID, waitFor:Config().Waits.(minWait), contrast: on, DPI: 144) into orderList
		
		put the first item of orderList into orderRect
		put orderRect +[-200,-200,600,600] into displayRect

		// Ensure meal display name is shown on the KDS for the order ID
		put DataFile().ColumnMapping.(global posPlatformName).MealDisplayName into excelColumnName
		put Common.readDataFromExcel (excelColumnName) into mealDisplayName
		
		//assert that ImageFound(text:mealDisplayName, waitFor:Config().Waits.(minWait),SearchRectangle: displayRect)
		assert that common.extendedFindText(mealDisplayName,Config().Waits.(minWait), displayRect) is true with error "Meal Present in KDS"
		
		// Click the Order ID and select Bump Order option
		click the center of orderRect
		WaitFor Config().Waits.(minWait), text:"Bump Order", SearchRectangle:displayRect
		click FoundImageLocation()
		wait 2
		
		// Validate that the order is bumped and is not showing on the KDS anymore
		assert that not imageFound(text:global orderID, waitFor:Config().Waits.(minWait))
	end if
	
	// Code for Oracle KDS
	if (global posPlatformName) is "Oracle" or (global posPlatformName) is "OracleKiosk"
		// Look for the Order ID on the KDS screen
		repeat until ImageFound(text: global orderID, waitFor:Config().Waits.(midWait))
			click Text: "Next Page",  SearchRectangle: Config().SearchRectangles.(BottomHalf)
		end repeat
		
		// Pick the first instance of order ID on screen and create a search rectangle
		put EveryImageRectangle(text:global orderID, waitFor:Config().Waits.(minWait)) into orderList
		
		put the first item of orderList into orderRect
		put orderRect +[-250,-20,150,350] into displayRect

		// Ensure meal display name is shown on the KDS for the order ID
		put DataFile().ColumnMapping.(global posPlatformName).KDSMealDisplayName into excelColumnName
		put Common.readDataFromExcel (excelColumnName) into mealDisplayName
		
		//assert that ImageFound(text:mealDisplayName, waitFor:Config().Waits.(minWait),SearchRectangle: displayRect)
		assert that common.extendedFindText(mealDisplayName,Config().Waits.(minWait), displayRect) is true with error "Meal Present in KDS"
		
		// Click the Order ID and select Bump Order option
		click the center of orderRect
		WaitFor Config().Waits.(minWait), text:"Bump", SearchRectangle:Config().SearchRectangles.(BottomHalf)
		click FoundImageLocation()
		wait 2
		
		// Validate that the order is bumped and is not showing on the KDS anymore
		assert that not imageFound(text:global orderID, waitFor:Config().Waits.(minWait))
	end if
	
	if (global posPlatformName) is "Sicom"
		// Pick the first instance of order ID on screen and create a search rectangle
		put EveryImageRectangle(text:global orderID, waitFor:Config().Waits.(minWait),SearchRectangle:Config().SearchRectangles.(LeftHalf)) into orderList
		
		put the first item of orderList into orderRect
		log orderRect
		put orderRect +[-200,-200,600,600] into displayRect

		// Ensure meal display name is shown on the KDS for the order ID
		put DataFile().ColumnMapping.(global posPlatformName).MealDisplayName into excelColumnNumber
		put Common.readDataFromExcel (excelColumnNumber) into mealDisplayName
		
		//assert that ImageFound(text:mealDisplayName, waitFor:Config().Waits.(minWait),SearchRectangle: displayRect)
		assert that common.extendedFindText(mealDisplayName,Config().Waits.(minWait), displayRect) is true with error "Meal Present in KDS"
		
		//wait until the order has disappeared
		waitForNotFound Config().Waits.(SicomKDSWait), {text: global orderID, searchRectangle: displayRect}

		// Validate that the order is bumped and is not showing on the KDS anymore
		assert that not imageFound(text:global orderID)
	end if
	
	// Code for Oracle KDS. If the platformName is App Delivery or App Pickup
	if (global posPlatformName) is "OracleAppDelivery" or (global posPlatformName) is "OracleAppPickup"
		
		// Read Order Type from the Input file
		put DataFile().ColumnMapping.(global posPlatformName).OrderType into excelColumnName
		put Common.readDataFromExcel (excelColumnName) into orderType
		
		if orderType is "Delivery" ignoring case
			// Look for the DY text on the KDS that signifies Delivery order
			WaitFor Config().Waits.(minWait), text:"DY"
			put FoundImageInfo().imageRectangle +[-100,-100,400,300] into orderRect
		end if
		
		if orderType is "Pickup" ignoring case
			// Look for the PLK App TO text on the KDS that signifies Pickup order
			WaitFor Config().Waits.(minWait), text:"PLK App TO"
			put FoundImageInfo().imageRectangle +[-100,-100,350,300] into orderRect
		end if
		
		// Validate Meal Display Name on KDS
		put DataFile().ColumnMapping.(global posPlatformName).KDSMealDisplayName into excelColumnName
		put Common.readDataFromExcel (excelColumnName) into mealDisplayName
		
		WaitFor Config().Waits.(minWait), text:mealDisplayName, searchRectangle: orderRect
		
		// Read Order ID next to text CHK within the rectangle
		WaitFor Config().Waits.(minWait), text:"CHK", caseSensitive: yes, searchRectangle: orderRect
		put FoundImageInfo().imageRectangle +[60,0,80,0] into orderIDRect
		put readtext(orderIDRect) into global orderID
		
		// Bump the Order
		click the center of orderIDRect
		WaitFor Config().Waits.(minWait), text:"Bump", SearchRectangle:Config().SearchRectangles.(BottomHalf)
		click FoundImageLocation()
		wait 2
	end if
	
end bumpOrderIDOnKDS


(**  
disconnectFromKDS - Handler to Disconnect from the KDS SUT
@Version 1.0 4/22/2025
@ChangeReason Creation
**)
to disconnectFromKDS
	// Code for NCR KDS
	if (global posPlatformName) is "NCR" or (global posPlatformName) is "NCRKiosk"
		Disconnect {serverID: "127.0.0.1", portNum:5500, Visible: "Yes"}
	end if
	
	// Code for Oracle KDS
	if (global posPlatformName) is "Oracle" or (global posPlatformName) is "OracleKiosk" or (global posPlatformName) is "OracleAppDelivery"  or (global posPlatformName) is "OracleAppPickup"
		Disconnect DataFile().SUTNames.OracleKDS
	end if
	
	// Code for Sicom KDS
	if (global posPlatformName) is "Sicom"
		Common.switchSicomWindowTo "POS"
	end if
end disconnectFromKDS


(**  
launchSicomKDS - Internal Handler to launch the Sicom KDS on Egde
@Version 1.0 4/22/2025
@ChangeReason Creation
**)
to launchSicomKDS
	Log "Running Script:"&&item 1 delimited by ".script" of my name &"."& param(0),
	
	// Validate if the Sicom KDS is open, else launch Edge browser and continue next steps.
	If imagefound (Text:"Support Terminal", waitFor: Config().Waits.(minWait), SearchRectangle: Config().SearchRectangles.(LeftHalf))
		LogSuccess "Sicom KDS is open."
	else
		// Open Edge application from taskbar
		waitFor Config().Waits.(minWait), {image:"Icons/EdgeBrowser", SearchRectangle: Config().SearchRectangles.(BottomHalf)}
		click FoundImageLocation()
		wait 2
		
		// Wait for Edge window to open and open the webpage
		waitFor Config().Waits.(minWait), {text:"MGRNG Login", SearchRectangle: Config().SearchRectangles.(TopHalf) }
		click FoundImageLocation()
		wait 2
		
		// Wait for login window and enter credentials
		waitFor Config().Waits.(minWait), {text:"User Name", SearchRectangle: Config().SearchRectangles.(TopHalf) }
		click FoundImageLocation()+ Config().TextOffsets.(CommandCenterTextbox)
		typetext DataFile().Logins.SicomVNC.KDSUsername, tabKey
		wait 1
		typetext DataFile().Logins.SicomVNC.KDSPassword, returnKey
		
		// Wait for Page to Load. Click on System
		waitFor Config().Waits.(minWait), {text:"System Maintenance", SearchRectangle: Config().SearchRectangles.(LeftHalf) }
		click FoundImageLocation()
		
		// Click on Tools
		waitFor Config().Waits.(minWait), {text:"Tools", SearchRectangle: Config().SearchRectangles.(TopHalf), caseSensitive: Yes }
		click FoundImageLocation()
		
		// Click on Remote View
		waitFor Config().Waits.(minWait), {text:"Remote View", SearchRectangle: Config().SearchRectangles.(TopHalf) }
		click FoundImageLocation()
		
		// Wait for the kitchen screens selection window to open up
		waitFor Config().Waits.(minWait), {text:"Kitchen screens", SearchRectangle: Config().SearchRectangles.(TopHalf)}

		// Select checkboxes for KDS screens
		waitFor Config().Waits.(minWait), {text:"000:ks001", SearchRectangle: Config().SearchRectangles.(LeftHalf) }
		click FoundImageLocation()
		waitFor Config().Waits.(minWait), {text:"000:ks002", SearchRectangle: Config().SearchRectangles.(LeftHalf) }
		click FoundImageLocation()
		
		// Set Refresh Rate
		waitFor Config().Waits.(minWait), {text:"Refresh Rate", SearchRectangle: Config().SearchRectangles.(LeftHalf) }
		click FoundImageLocation() + [200,0]
		TypeText "5", returnKey
	End If
	
	// Validate Sicom KDS opened successfully
	assert that imagefound (Text:"Terminal & Screen", waitFor: Config().Waits.(minWait), SearchRectangle: Config().SearchRectangles.(LeftHalf)) with warning "Sicom KDS launch"
	
	Log "End of Script:"&&item 1 delimited by ".script" of my name &"."& param(0)
end launchSicomKDS


(**  
validateOrderOnSicomKDS - Validates the order is found on the Sicom KDS.
@Version 1.0 6/17/2025
@ChangeReason Creation
**)
to validateOrderOnSicomKDS
	Log "Running Script:"&&item 1 delimited by ".script" of my name &"."& param(0)
	
	// Validate Order ID on the Sicom KDS
	If imageFound(text: global orderID, waitFor: Config().Waits.(minWait), SearchRectangle:LeftHalf)
		LogSuccess "Order is found."
	else
		// If Order ID not found, scroll down to view the In Progress section.
		Typetext endKey
		Assert that imageFound(text: global orderID, waitFor:Config().Waits.(minWait), SearchRectangle:LeftHalf)
	End If
	
	Log "End of Script:"&&item 1 delimited by ".script" of my name &"."& param(0)
end validateOrderOnSicomKDS



